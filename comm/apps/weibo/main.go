package weibo

import (
	"encoding/json"
	"fmt"
	"github.com/asmcos/requests"
	"go-wxbot/openwechat/comm/global"
	"strings"
	"time"
)

var exclude []string

func inExclude(t string, list []string) bool {
	for _, s := range list {
		if t == s {
			return true
		}
	}
	return false
}

func WeiboRun() {
	url := global.Conf.Weibo.Url
	es := strings.Split(global.Conf.Weibo.Exclude, ",")
	for _, ee := range es {
		if ee != "" {
			exclude = append(exclude, ee)
		}
	}
	fmt.Println("- 微博弹幕初始化开始 -")
	fmt.Println("- 读取配置：", url)
	fmt.Println("- 排除消息：", exclude)

	var count int
	var lastStr string //最后一次的文本
	for {
		time.Sleep(5 * time.Second)

		count++
		resp, err := requests.Get(url)
		if err != nil {
			fmt.Println("- 微博", count, "requests 失败")
			return
		}
		var mo AutoGenerated
		err1 := json.Unmarshal([]byte(resp.Text()), &mo)
		if err1 != nil {
			fmt.Println("- 微博", count, "获取失败")
			continue
		}

		if mo.Ok != 1 {
			continue
		}

		if len(mo.Data) <= 0 {
			continue
		}

		firstS := ""
		for _, datum := range mo.Data {
			if inExclude(datum.User.ScreenName, exclude) {
				fmt.Println("- 微博", count, "排除的消息: ", datum.TextRaw)
				continue
			}
			// 最后的一次不等于
			if lastStr != datum.TextRaw {
				// 记录文本
				message := fmt.Sprintf("微博: %s", datum.TextRaw)
				fmt.Println("- 微博", message)
				global.WxGroups.SearchByNickName(1, global.Conf.Keys.MasterGroup).SendText(message)
				if firstS == "" {
					//lastStr = datum.TextRaw
					firstS = datum.TextRaw
				}
				continue
			} else {
				break
			}
		}
		if firstS != "" {
			lastStr = firstS
		}

	}
}
